#!/bin/bash -ue
# ******************************************************************************
#  Bash environment configuration in Docker environment.
#
#  Since : May, 2023
#  Author: Arnold Somogyi <arnold.somogyi@gmail.com>
#
#  Copyright (c) 2020-2023 Remal Software and Arnold Somogyi All rights reserved
# ******************************************************************************
source /shared.sh
source /ds-functions.sh

# ------------------------------------------------------------------------------
# This method generates a certificate for the server using the our Private
# Certificate Authority infrastructure.
# ------------------------------------------------------------------------------
function generate_certificate() {
  local host_name
  host_name=$(hostname)

  printf "%s | [INFO]  generating a server certificate...\n" "$(date +"%Y-%b-%d %H:%M:%S")"
  printf "%s | [DEBUG]         CA_HOST: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$CA_HOST"
  printf "%s | [DEBUG]        SSH_USER: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$SSH_USER"
  printf "%s | [DEBUG]    SSH_PASSWORD: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$SSH_PASSWORD"
  printf "%s | [DEBUG]       host_name: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$host_name"
  sshpass -p "$SSH_PASSWORD" ssh \
    -oStrictHostKeyChecking=no \
    "$SSH_USER@$CA_HOST" "bash -lc '/opt/easy-rsa/generate-cert.sh $host_name'"
}

# ------------------------------------------------------------------------------
# Generates and saves a new ForgeRock Directory Server deployment-key.
# A deployment key is a random string generated by DS software. A deployment key
# password is a secret string at least 8 characters long that you choose. The
# two are a pair. You must have a deployment key's password to use the key.
# ------------------------------------------------------------------------------
function generate_ds_deployment_key() {
  printf "%s | [INFO]  generating a new ForgeRock Directory Server deployment-key...\n" "$(date +"%Y-%b-%d %H:%M:%S")"

  cd "$DS_HOME"
  local deployment_key deployment_key_password
  deployment_key_password="password"
  deployment_key="$(bin/dskeymgr create-deployment-id --deploymentIdPassword "$deployment_key_password")"

  mkdir -p "$(dirname "$DEPLOYMENT_KEY_FILE")"
  printf "KEY=%s\n" "$deployment_key" > "$DEPLOYMENT_KEY_FILE"
  printf "PASSWORD=%s\n" "$deployment_key_password" >> "$DEPLOYMENT_KEY_FILE"

  printf "%s | [DEBUG]    deployment key file: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$DEPLOYMENT_KEY_FILE"
  printf "%s | [DEBUG]         deployment key: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$deployment_key"
  printf "%s | [DEBUG]   password for the key: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$deployment_key_password"
  printf "%s | [INFO ] deployment-key has been saved\n" "$(date +"%Y-%b-%d %H:%M:%S")"
}

# ------------------------------------------------------------------------------
# Generates a new maser key.
# The master key is a certificate generated by the dskeymgr tool based on the
# deployment key and deployment password. The master key sits in a PKCS#12
# keystore.
#
# Arguments
#    arg 1:  keystore file
#    arg 2:  keystore password
# ------------------------------------------------------------------------------
function generate_ds_master_key() {
  local alias keystore_file keystore_password
  alias="master-key"
  keystore_file="$1"
  keystore_password="$2"

  local deployment_key deployment_key_password
  deployment_key=$(get_value "$DEPLOYMENT_KEY_FILE" "KEY")
  deployment_key_password=$(get_value "$DEPLOYMENT_KEY_FILE" "PASSWORD")

  printf "%s | [INFO]  creating a new ForgeRock Directory Server master-key...\n" "$(date +"%Y-%b-%d %H:%M:%S")"
  printf "%s | [DEBUG]                  alias: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$alias"
  printf "%s | [DEBUG]    deployment key file: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$DEPLOYMENT_KEY_FILE"
  printf "%s | [DEBUG]         deployment key: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$deployment_key"
  printf "%s | [DEBUG]   password for the key: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$deployment_key_password"
  printf "%s | [DEBUG]               keystore: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$keystore_file"
  printf "%s | [DEBUG]      keystore password: \"%s\"\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$keystore_password"

  "$DS_HOME/bin/dskeymgr" export-master-key-pair \
    --alias "$alias" \
    --deploymentKey "$deployment_key" \
    --deploymentKeyPassword "$deployment_key_password" \
    --keyStoreFile "$keystore_file" \
    --keyStorePassword "$keystore_password"
}

# ------------------------------------------------------------------------------
# ForgeRock Directory Server installation.
# ------------------------------------------------------------------------------
function install_ds() {
  local deployment_key deployment_key_password
  deployment_key=$(get_value "$DEPLOYMENT_KEY_FILE" "KEY")
  deployment_key_password=$(get_value "$DEPLOYMENT_KEY_FILE" "PASSWORD")

  local truststore_file truststore_password
  truststore_file=$(readlink -f "$JAVA_HOME/lib/security/cacerts")
  truststore_password="changeit"

  local fqdn
  fqdn=$(hostname -f)

  local keystore_file keystore_password
  keystore_file="/tmp/$fqdn.p12"
  keystore_password="changeit"

  local profile
  profile="am-identity-store"

  printf "[INFO]  installing ForgeRock Directory Service...\n"
  printf "[DEBUG]                         profile: \"%s\"\n" "$profile"
  printf "[DEBUG]                       host-name: \"%s\"\n" "$fqdn"
  printf "[DEBUG]                  deployment-key: \"%s\"\n" "$deployment_key"
  printf "[DEBUG]         deployment-key password: \"%s\"\n" "$deployment_key_password"
  printf "[DEBUG]                    ldap user DN: \"%s\"\n" "$LDAP_USER_DN"
  printf "[DEBUG]              ldap user password: \"%s\"\n" "$LDAP_USER_PASSWORD"
  printf "[DEBUG]           monitor user password: \"%s\"\n" "$MONITOR_USER_PASSWORD"
  printf "[DEBUG]            admin connector port: \"%s\"\n" "$ADMIN_CONNECTOR_PORT"
  printf "[DEBUG]                       LDAP port: \"%s\"\n" "$LDAP_PORT"
  printf "[DEBUG]                      LDAPS port: \"%s\"\n" "$LDAPS_PORT"
  printf "[DEBUG]   identity store admin password: \"%s\"\n" "$IDENTITY_STORE_ADMIN_PASSWORD"
  printf "[DEBUG]                 truststore file: \"%s\"\n" "$truststore_file"
  printf "[DEBUG]             truststore password: \"%s\"\n" "$truststore_password"
  printf "[DEBUG]                   keystore file: \"%s\"\n" "$keystore_file"
  printf "[DEBUG]               keystore password: \"%s\"\n" "$keystore_password"

  cd "$DS_HOME"

  printf "[INFO ] setting up directory-server\n"
  ./setup \
    --profile "$profile" \
    --serverId "$profile" \
    --deploymentId "$deployment_key" \
    --deploymentIdPassword "$deployment_key_password" \
    --rootUserDN "$LDAP_USER_DN" \
    --rootUserPassword "$LDAP_USER_PASSWORD" \
    --monitorUserPassword "$MONITOR_USER_PASSWORD" \
    --hostname "$fqdn" \
    --adminConnectorPort "$ADMIN_CONNECTOR_PORT" \
    --ldapPort "$LDAP_PORT" \
    --enableStartTls \
    --ldapsPort "$LDAPS_PORT" \
    --set am-identity-store/amIdentityStoreAdminPassword:"$LDAP_USER_PASSWORD" \
    --acceptLicense \
    --usePkcs12KeyStore "$keystore_file" \
    --keyStorePassword "$keystore_password" \
    --certNickname "$fqdn" \
    --usePkcs12TrustStore "$keystore_file" \
    --trustStorePassword "$keystore_password"
}

# ------------------------------------------------------------------------------
#  Main program starts here.
# ------------------------------------------------------------------------------
printf "%s | [DEBUG] -----------------------------------------------------------\n" "$(date +"%Y-%b-%d %H:%M:%S")"
printf "%s | [DEBUG] executing the \"%s\" script...\n" "$(date +"%Y-%b-%d %H:%M:%S")" "$0"
printf "%s | [DEBUG] ===========================================================\n" "$(date +"%Y-%b-%d %H:%M:%S")"
KEYSTORE_HOME="/tmp"
KEYSTORE_FILE=$(hostname -f).p12
KEYSTORE_PASSWORD="changeit"

wait_for_container "$CA_HOST"
generate_certificate
copy_from_remote_machine "$CA_HOST" "$SSH_USER" "$SSH_PASSWORD" "/opt/easy-rsa/pki/private/$KEYSTORE_FILE" "$KEYSTORE_HOME"
generate_ds_deployment_key
generate_ds_master_key "$KEYSTORE_HOME/$KEYSTORE_FILE" "$KEYSTORE_PASSWORD"
install_ds
