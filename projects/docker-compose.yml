services:
    # ----- Private Certificate Authority Server -------------------------------
    pki:
        image: remal-private-ca:0.2.0
        container_name: pki.${DOMAIN_NAME}
        hostname: pki.${DOMAIN_NAME}
        ports:
            - "13012:22"   # SSH
        environment:
            - EASYRSA_REQ_CN=${DOMAIN_NAME}
            - EASYRSA_REQ_COUNTRY=${EASYRSA_REQ_COUNTRY}
            - EASYRSA_REQ_PROVINCE=${EASYRSA_REQ_PROVINCE}
            - EASYRSA_REQ_CITY=${EASYRSA_REQ_CITY}
            - EASYRSA_REQ_ORG=${EASYRSA_REQ_ORG}

    # ----- Hashicorp Consul ---------------------------------------------------
    consul:
        image: remal-consul:0.2.0
        container_name: consul.${DOMAIN_NAME}
        hostname: consul.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "pki.${DOMAIN_NAME}"]
        ports:
            - "13062:22"   # SSH
            - "13063:8501" # Consul web console, HTTPS
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}

    # ----- user-service-1 -----------------------------------------------------
    user-service-1:
        image: remal-java-21-postgres-runner:0.2.0
        container_name: user-service-1.${DOMAIN_NAME}
        hostname: user-service-1.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "14112:22"   # SSH
            - "14113:8000" # JVM debug
            - "14114:8443" # HTTPS
            - "14115:5432" # Postgres
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_SERVER_HOSTNAME=consul.${DOMAIN_NAME}
            - START_DB=true
            - DB_APP_DATABASE=default_db
            - DB_APP_USER=application
            - DB_APP_PASSWORD=password
        volumes:
            - $HOME/Java/gombi/bin/remal-gombi-user-service:/jar-to-run

    # ----- user-service-2 -----------------------------------------------------
    user-service-2:
        image: remal-java-21-postgres-runner:0.2.0
        container_name: user-service-2.${DOMAIN_NAME}
        hostname: user-service-2.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "14122:22"   # SSH
            - "14123:8000" # JVM debug
            - "14124:8443" # HTTPS
            - "14125:5432" # Postgres
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_SERVER_HOSTNAME=consul.${DOMAIN_NAME}
            - START_DB=true
            - DB_APP_DATABASE=default_db
            - DB_APP_USER=application
            - DB_APP_PASSWORD=password
        volumes:
            - $HOME/Java/gombi/bin/remal-gombi-user-service:/jar-to-run

    # ----- welcome-service-1 --------------------------------------------------
    welcome-service-1:
        image: remal-java-21-runner:0.2.0
        container_name: welcome-service-1.${DOMAIN_NAME}
        hostname: welcome-service-1.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "14212:22"   # SSH
            - "14213:8000" # JVM debug
            - "14214:8443" # HTTPS
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_SERVER_HOSTNAME=consul.${DOMAIN_NAME}
        volumes:
            - $HOME/Java/gombi/bin/remal-gombi-welcome-service:/jar-to-run

    # ----- kafka-producer-service-1 -------------------------------------------
    kafka-producer-service-1:
        image: remal-java-21-runner:0.2.0
        container_name: kafka-producer-service-1.${DOMAIN_NAME}
        hostname: kafka-producer-service-1.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "14312:22"   # SSH
            - "14313:8000" # JVM debug
            - "14314:8443" # HTTPS
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_SERVER_HOSTNAME=consul.${DOMAIN_NAME}
        volumes:
            - $HOME/Java/gombi/bin/remal-gombi-kafka-producer:/jar-to-run

    # ----- kafka-consumer-service-1 -------------------------------------------
    kafka-consumer-service-1:
        image: remal-java-21-postgres-runner:0.2.0
        container_name: kafka-consumer-service-1.${DOMAIN_NAME}
        hostname: kafka-consumer-service-1.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "14412:22"   # SSH
            - "14413:8000" # JVM debug
            - "14414:8443" # HTTPS
            - "14415:5432" # Postgres
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_SERVER_HOSTNAME=consul.${DOMAIN_NAME}
            - START_DB=true
            - DB_APP_DATABASE=default_db
            - DB_APP_USER=application
            - DB_APP_PASSWORD=password
        volumes:
            - $HOME/Java/gombi/bin/remal-gombi-kafka-consumer:/jar-to-run

    # ----- Monitoring: Prometheus ---------------------------------------------
    prometheus:
        image: remal-prometheus:0.2.0
        container_name: prometheus.${DOMAIN_NAME}
        hostname: prometheus.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "consul.${DOMAIN_NAME}"]
        ports:
            - "13072:22"   # SSH
            - "13073:9090" # HTTPS
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - CONSUL_HOST=consul.${DOMAIN_NAME}

    # ----- Monitoring: Grafana ------------------------------------------------
    grafana:
        image: remal-grafana:0.2.0
        container_name: grafana.${DOMAIN_NAME}
        hostname: grafana.${DOMAIN_NAME}
        entrypoint: ["/wait-for-container.sh", "prometheus.${DOMAIN_NAME}"]
        ports:
            - "13082:22"   # SSH
            - "13083:3000" # HTTPS
        environment:
            - PKI_HOST=pki.${DOMAIN_NAME}
            - PROMETHEUS_HOST=prometheus.${DOMAIN_NAME}

    # ----- Kafka --------------------------------------------------------------
    zookeeper-1:
        image: confluentinc/cp-zookeeper:7.8.0
        container_name: zookeeper-1.${DOMAIN_NAME}
        hostname: zookeeper-1.${DOMAIN_NAME}
        ports:
            - "13031:2181" # zookeeper's client port
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
            - ZOOKEEPER_TICK_TIME=2000

    kafka-1:
        image: confluentinc/cp-kafka:7.8.0
        container_name: kafka-1.${DOMAIN_NAME}
        hostname: kafka-1.${DOMAIN_NAME}
        ports:
            - "13053:9093" # kafka's client port
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1.${DOMAIN_NAME}:2181
            - KAFKA_LISTENERS=INTERNAL://kafka-1.${DOMAIN_NAME}:9092,EXTERNAL://kafka-1.${DOMAIN_NAME}:9093
            - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-1.${DOMAIN_NAME}:9092,EXTERNAL://localhost:13053
            - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        depends_on:
            - zookeeper-1

    kafka-2:
        image: confluentinc/cp-kafka:7.8.0
        container_name: kafka-2.${DOMAIN_NAME}
        hostname: kafka-2.${DOMAIN_NAME}
        ports:
            - "13043:9093" # kafka's client port
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1.${DOMAIN_NAME}:2181
            - KAFKA_LISTENERS=INTERNAL://kafka-2.${DOMAIN_NAME}:9092,EXTERNAL://kafka-2.${DOMAIN_NAME}:9093
            - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-2.${DOMAIN_NAME}:9092,EXTERNAL://localhost:13043
            - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        depends_on:
            - zookeeper-1
