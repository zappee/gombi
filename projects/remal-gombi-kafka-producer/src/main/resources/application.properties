####################################################################################################
# embedded web server
####################################################################################################
server.port=8443
server.ssl.bundle=web-server

####################################################################################################
# spring core
####################################################################################################
spring.application.name=@project.name@
spring.application.version=@project.version@

####################################################################################################
# log configuration
####################################################################################################
logging.file.name=/var/log/spring/@project.name@.log
logging.level.org.springframework.context=WARN
logging.level.org.springframework.web=WARN
logging.level.com.remal=DEBUG

####################################################################################################
# customize the jackson object mapper
####################################################################################################
spring.jackson.serialization.indent_output=true

####################################################################################################
# hashicorp consul
####################################################################################################
spring.config.import=consul:
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.instanceId=${spring.application.name}
spring.cloud.consul.discovery.tags=service,${spring.application.version}
spring.cloud.consul.discovery.scheme=https
spring.cloud.consul.discovery.health-check-interval=2s
spring.cloud.consul.discovery.health-check-timeout=2s
spring.cloud.consul.discovery.health-check-critical-timeout=10s
spring.cloud.consul.discovery.query-passing=true
spring.cloud.consul.config.name=com/remal/gombi/@project.name@

####################################################################################################
# application monitoring
####################################################################################################
management.prometheus.metrics.export.enabled=true
management.endpoint.prometheus.access=unrestricted
management.endpoints.web.exposure.include=info,health,prometheus

####################################################################################################
# spring ssh-bundle configuration
####################################################################################################
# embedded web server
spring.ssl.bundle.jks.web-server.key.alias=${FQDN}
spring.ssl.bundle.jks.web-server.keystore.location=file:/tmp/${FQDN}.p12
spring.ssl.bundle.jks.web-server.keystore.password=changeit
spring.ssl.bundle.jks.web-server.keystore.type=PKCS12
# configure RestClient to use HTTPS correctly
spring.ssl.bundle.jks.rest-template.truststore.location=file:/tmp/${FQDN}.p12
spring.ssl.bundle.jks.rest-template.truststore.password=changeit
spring.ssl.bundle.jks.rest-template.truststore.type=PKCS12

####################################################################################################
# kafka
#
# linger.ms            = The producer groups together any records that arrive in between request
#                        transmissions into a single batched request.
# delivery.timeout.ms >= retry.backoff.ms + request.timeout.ms
# request.timeout.ms   = The configuration controls the maximum amount of time the client will wait
#                        for the response of a request. If the response is not received before the
#                        timeout elapses the client will resend the request if necessary or fail the
#                        request if retries are exhausted.
# retry.backoff.ms     = Producer will wait 100ms between retries.
# retry.backoff.max.ms = The maximum amount of time to wait when retrying a request to the broker
#                        that has repeatedly failed. If provided, it will increase exponentially up
#                        to this maximum.
####################################################################################################
# See the source code for more description: KafkaProducerConfiguration.java
kafka.producer.bootstrap.servers=kafka-1.hello.com:9092, kafka-2.hello.com:9092
kafka.producer.enable.idempotence=true
kafka.producer.acks=all
kafka.producer.retries=2147483647
kafka.producer.linger.ms=0
kafka.producer.delivery.timeout.ms=15000
kafka.producer.request.timeout.ms=10000
kafka.producer.retry.backoff.ms=1000
kafka.producer.retry.backoff.max.ms=5000
kafka.topic.name=incoming
kafka.topic.partitions=3
kafka.topic.replicas=2
kafka.topic.min.insync.replicas
