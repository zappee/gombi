' ******************************************************************************
' UML PlantUML diagram that shows the java-runner Remal Docker container
' dependencies.
'
' Since : March 2024
' Author: Arnold Somogyi <arnold.somogyi@gmail.com>
'
' Copyright (c) 2020-2024 Remal Software and Arnold Somogyi All rights reserved
' ******************************************************************************
@startuml

<style>
  .STYLE_INFRA {
    RoundCorner 20
    LineThickness 2
    LineColor SteelBlue
    BackgroundColor Turquoise
  }
  .STYLE_APP {
    RoundCorner 20
    LineThickness 2
    LineColor Purple
    BackgroundColor HotPink
  }
  .STYLE_MONITOR {
    RoundCorner 20
    LineThickness 2
    LineColor Sienna
    BackgroundColor Bisque
  }
</style>


skinparam defaultTextAlignment center
title **Remal java-runner Docker container dependencies**


sprite $JAR_INFRA    jar:archimate/network
sprite $JAR_APP      jar:archimate/physical-equipment
sprite $JAR_MONITOR  jar:archimate/assignment


node          "Java Runner"                    as java_runner     <<$JAR_INFRA>>   <<STYLE_INFRA>> {
   component  "User Service\nJAR"              as rest_service    <<$JAR_APP>>     <<STYLE_APP>>
   component  "Hashicorp Consul Agent\nClient" as consul_client   <<$JAR_INFRA>>   <<STYLE_INFRA>>
   component  "PostgreSQL"                     as postgresql      <<$JAR_APP>>     <<STYLE_INFRA>>
   portin     "GET\nrest"                      as rest_service_i1
   portin     "POST\nrest"                     as rest_service_i2
   portin     "POST\nrest"                     as rest_service_ix
}
node          "Prometheus"                     as prometheus      <<$JAR_MONITOR>> <<STYLE_MONITOR>>
node          "Gafana"                         as gafana          <<$JAR_MONITOR>> <<STYLE_MONITOR>>
node          "Private PKI"                    as pki             <<$JAR_INFRA>>   <<STYLE_INFRA>>
node          "Hashicorp Consul Agent\nServer" as consul_server   <<$JAR_INFRA>>   <<STYLE_INFRA>>


consul_server    <--> pki             : generate\ncertificate
java_runner      <--> pki             : generate\ncertificate
   consul_client  --> consul_server
   rest_service  <--> postgresql
   rest_service   --> consul_client   : service discovery\\\ndistributed configuration
   rest_service   --> rest_service_i1
   rest_service   --> rest_service_i2
   rest_service   --> rest_service_ix
prometheus       ...> rest_service
gafana            ..> prometheus
prometheus        ..> consul_server   : get the URL\n of services\nto monitor

@enduml
